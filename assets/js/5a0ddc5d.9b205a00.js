"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[577],{3905:(e,n,r)=>{r.d(n,{Zo:()=>f,kt:()=>m});var t=r(7294);function l(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){l(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,l=function(e,n){if(null==e)return{};var r,t,l={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(l[r]=e[r]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=t.createContext({}),p=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},f=function(e){var n=p(e.components);return t.createElement(o.Provider,{value:n},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,l=e.mdxType,s=e.originalType,o=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),g=p(r),d=l,m=g["".concat(o,".").concat(d)]||g[d]||c[d]||s;return r?t.createElement(m,i(i({ref:n},f),{},{components:r})):t.createElement(m,i({ref:n},f))}));function m(e,n){var r=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var s=r.length,i=new Array(s);i[0]=d;var a={};for(var o in n)hasOwnProperty.call(n,o)&&(a[o]=n[o]);a.originalType=e,a[g]="string"==typeof e?e:l,i[1]=a;for(var p=2;p<s;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8516:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var t=r(7462),l=(r(7294),r(3905));const s={sidebar_position:2},i="CLI",a={unversionedId:"reference/cli",id:"reference/cli",title:"CLI",description:"Pedersen provides a CLI binary for managing the sharing and the reconstruction of a secret.",source:"@site/docs/reference/02-cli.mdx",sourceDirName:"reference",slug:"/reference/cli",permalink:"/pedersen/reference/cli",draft:!1,editUrl:"https://github.com/MatteoArella/pedersen/tree/master/docs/docs/reference/02-cli.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Go API",permalink:"/pedersen/reference/go"},next:{title:"Guides",permalink:"/pedersen/category/guides"}},o={},p=[{value:"Generate",id:"generate",level:2},{value:"Split",id:"split",level:2},{value:"Combine",id:"combine",level:2},{value:"Verify",id:"verify",level:2},{value:"Verify secret part",id:"verify-secret-part",level:3},{value:"Verify secret shares",id:"verify-secret-shares",level:3}],f={toc:p},g="wrapper";function c(e){let{components:n,...r}=e;return(0,l.kt)(g,(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cli"},"CLI"),(0,l.kt)("p",null,"Pedersen provides a CLI binary for managing the sharing and the reconstruction of a secret."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen --help\nUsage:\n   [command]\n\nAvailable Commands:\n  combine     Combine Pedersen shares\n  completion  Generate the autocompletion script for the specified shell\n  generate    Generate Pedersen parameters\n  help        Help about any command\n  split       Split secret into Pedersen shares\n  verify      Verify Pedersen shares or parts\n  version     Show the Pedersen version information\n\nFlags:\n  -h, --help              help for this command\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n\nUse " [command] --help" for more information about a command.\n')),(0,l.kt)("h2",{id:"generate"},"Generate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen generate --help\nGenerate Pedersen parameters\n\nUsage:\n   generate [flags]\n\nFlags:\n  -b, --bits int         prime bits size (default 128)\n      --format FileFmt   file format. allowed: ""yaml\\", \\"json\\", \\"xml""\n  -h, --help             help for generate\n  -o, --out string       output file\n      --perm uint32      output file permissions (default 256)\n\nGlobal Flags:\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n')),(0,l.kt)("h2",{id:"split"},"Split"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen split --help\nSplit secret into Pedersen shares\n\nUsage:\n   split [flags]\n\nFlags:\n      --commitments string   commitments file\n      --format FileFmt       file format. allowed: ""yaml\\", \\"json\\", \\"xml""\n  -g, --group string         group file\n  -h, --help                 help for split\n  -i, --in string            input file\n  -p, --parts int            shares parts (default 5)\n      --perm uint32          output file permissions (default 256)\n      --shares string        secret shares files regex expression\n  -t, --threshold int        shares threshold (default 3)\n\nGlobal Flags:\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n')),(0,l.kt)("h2",{id:"combine"},"Combine"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen combine --help\nCombine Pedersen shares\n\nUsage:\n   combine [flags]\n\nFlags:\n      --commitments string   commitments file\n      --format FileFmt       file format. allowed: ""xml\\", \\"yaml\\", \\"json""\n  -g, --group string         group file\n  -h, --help                 help for combine\n  -o, --out string           output file\n  -p, --parts int            shares parts (default 5)\n      --perm uint32          output file permissions (default 256)\n      --shares string        secret shares files regex expression\n  -t, --threshold int        shares threshold (default 3)\n  -v, --verify               verify shares before combine (default true)\n\nGlobal Flags:\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n')),(0,l.kt)("h2",{id:"verify"},"Verify"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen verify --help\nVerify Pedersen shares or parts\n\nUsage:\n   verify [command]\n\nAvailable Commands:\n  part        Verify Pedersen part\n  shares      Verify Pedersen shares\n\nFlags:\n  -h, --help   help for verify\n\nGlobal Flags:\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n\nUse " verify [command] --help" for more information about a command.\n')),(0,l.kt)("h3",{id:"verify-secret-part"},"Verify secret part"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen verify part --help\nVerify Pedersen part\n\nUsage:\n   verify part [flags]\n\nFlags:\n      --commitments string   commitments file\n  -g, --group string         group file\n  -h, --help                 help for part\n  -p, --parts int            shares parts (default 5)\n      --share string         secret shares file\n  -t, --threshold int        shares threshold (default 3)\n\nGlobal Flags:\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n')),(0,l.kt)("h3",{id:"verify-secret-shares"},"Verify secret shares"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ pedersen verify shares --help\nVerify Pedersen shares\n\nUsage:\n   verify shares [flags]\n\nFlags:\n      --commitments string   commitments file\n  -g, --group string         group file\n  -h, --help                 help for shares\n  -p, --parts int            shares parts (default 5)\n      --shares string        secret shares files regex expression\n  -t, --threshold int        shares threshold (default 3)\n\nGlobal Flags:\n      --logfile string    logging file\n      --loglevel string   logging level (default "INFO")\n')))}c.isMDXComponent=!0}}]);